# gRPC Encryption Service - Environment Configuration
# Copy this file to .env and customize for your environment

# Server Configuration
PORT=50051

# Authentication Configuration
# Enable/disable authentication methods
ENABLE_TOKEN_AUTH=true
ENABLE_TLS_AUTH=false
ENABLE_OAUTH2_AUTH=false

# Default authentication type when client doesn't specify
# Options: token, tls, oauth2
DEFAULT_AUTH_TYPE=token

# Require clients to explicitly specify auth-type in metadata
# Set to true for stricter security in production
REQUIRE_AUTH_TYPE=false

# Token Authentication
# Comma-separated list of valid tokens
AUTH_TOKENS=dev-token-123,test-token-456

# TLS/mTLS Authentication
# Comma-separated list of allowed certificate Common Names (CNs)
# AUTH_ALLOWED_CNS=client.example.com,trusted-client.example.com

# OAuth2/JWKS Authentication
# Comma-separated list of allowed JWT issuer URLs
# Examples:
#   Keycloak: https://keycloak.example.com/realms/myrealm
#   Auth0: https://your-tenant.auth0.com/
#   Okta: https://your-org.okta.com/oauth2/default
# OAUTH2_ALLOWED_ISSUERS=https://keycloak.example.com/realms/myrealm

# Production Configuration Examples:
# Uncomment and modify for production use

# Production with OAuth2
# ENABLE_TOKEN_AUTH=true
# ENABLE_OAUTH2_AUTH=true
# DEFAULT_AUTH_TYPE=oauth2
# REQUIRE_AUTH_TYPE=true
# AUTH_TOKENS=prod-secret-token-xyz
# OAUTH2_ALLOWED_ISSUERS=https://keycloak.example.com/realms/production

# Production with mTLS
# ENABLE_TOKEN_AUTH=false
# ENABLE_TLS_AUTH=true
# DEFAULT_AUTH_TYPE=tls
# AUTH_ALLOWED_CNS=client1.example.com,client2.example.com

# All authentication methods enabled
# ENABLE_TOKEN_AUTH=true
# ENABLE_TLS_AUTH=true
# ENABLE_OAUTH2_AUTH=true
# AUTH_TOKENS=multi-mode-token
# AUTH_ALLOWED_CNS=trusted-client.com
# OAUTH2_ALLOWED_ISSUERS=https://auth.example.com/realms/prod
